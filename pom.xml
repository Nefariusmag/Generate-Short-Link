<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.6.3</version>
        <relativePath/>
    </parent>

    <groupId>com.yourcodereview</groupId>
    <artifactId>generateshortlinks</artifactId>
    <version>1.0.0</version>
    <name>shortlinks</name>

    <properties>
        <java.version>11</java.version>
        <junit.jupiter.version>5.8.2</junit.jupiter.version>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>DHHmmssSSS</maven.build.timestamp.format>
        <postgres.db.name>postgres</postgres.db.name>
        <postgres.db.host>localhost</postgres.db.host>
        <postgres.db.username>postgres</postgres.db.username>
        <postgres.db.password>postgres</postgres.db.password>
        <postgres.db.image>postgres:13</postgres.db.image>
        <postgres.db.port>5432:5432</postgres.db.port>
        <docker.db.alias>postgres-${project.artifactId}</docker.db.alias>
        <docker.network.name>${project.artifactId}</docker.network.name>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
            <version>1.18.22</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.39.1</version>
        </dependency>
        <dependency>
            <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
            <version>2.0.2</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <executions>
                    <execution>
                        <id>unit-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>test</phase>
                        <configuration>
                            <excludes>
                                <exclude>**/*IT.java</exclude>
                            </excludes>
                            <includes>
                                <include>**/*Test.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-test</id>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <phase>integration-test</phase>
                        <configuration>
                            <excludes>
                                <exclude>none</exclude>
                            </excludes>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.39.1</version>
                <configuration>
                    <verbose>true</verbose>
                    <exposeContainerProps>docker.container</exposeContainerProps>
                    <logDate>default</logDate>
                    <removeVolumes>true</removeVolumes>
                    <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                    <containerNamePattern>%a</containerNamePattern>
                    <images>
                        <image>
                            <alias>${docker.db.alias}</alias>
                            <name>${postgres.db.image}</name>
                            <run>
                                <hostname>${postgres.db.image}</hostname>
                                <env>
                                    <POSTGRES_DB>${postgres.db.name}</POSTGRES_DB>
                                    <POSTGRES_USER>${postgres.db.username}</POSTGRES_USER>
                                    <POSTGRES_PASSWORD>${postgres.db.password}</POSTGRES_PASSWORD>
                                </env>
                                <network>
                                    <name>${docker.network.name}</name>
                                    <mode>custom</mode>
                                    <alias>${postgres.db.image}</alias>
                                </network>
                                <ports>
                                    <port>${postgres.db.port}</port>
                                </ports>
                                <wait>
                                    <time>60000</time>
                                    <log>PostgreSQL init process complete</log>
                                    <kill>10000</kill>
                                </wait>
                                <log>
                                    <enabled>true</enabled>
                                    <color>green</color>
                                    <driver>
                                        <name>json-file</name>
                                        <opts>
                                            <max-size>10m</max-size>
                                            <max-file>5</max-file>
                                        </opts>
                                    </driver>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start-docker-containers</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
<!--                            <goal>remove</goal>-->
<!--                            <goal>build</goal>-->
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop-docker-containers</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
<!--                            <goal>remove</goal>-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
